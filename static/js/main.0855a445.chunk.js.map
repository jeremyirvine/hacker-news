{"version":3,"sources":["components/Logo/Logo.js","components/Nav.js","components/Spinner/Spinner.js","components/Loading/Loading.js","utils/api.js","components/PostMeta/PostMeta.js","components/Post/Post.js","views/PostsView/PostsView.js","components/PostContent/PostContent.js","views/PostView/PostView.js","components/UserMeta/UserMeta.js","views/UserView/UserView.js","App.js","index.js"],"names":["withRouter","props","className","onClick","history","push","src","activeStyle","color","Nav","to","exact","Spinner","viewBox","xmlns","cx","cy","r","Loading","api","json","removeDead","posts","filter","Boolean","dead","removeDeleted","deleted","onlyPosts","type","fetchItem","id","fetch","then","res","PostMeta","author","time","comments","date","Date","toLocaleDateString","toLocaleTimeString","formatDate","Post","post","target","href","url","title","by","descendants","PostsView","useState","articles","setArticles","loading","setLoading","useEffect","ids","Error","slice","Promise","all","map","fetchMainPosts","article","key","PostContent","showComments","dangerouslySetInnerHTML","__html","text","PostView","match","setPost","setComments","params","undefined","kids","c","console","log","Object","keys","length","window","open","UserMeta","karma","UserView","user","setUser","setPosts","login","submitted","s","created","App","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0855a445.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Logo.css'\r\n\r\nconst Logo = (props) => {\r\n    return ( \r\n        <div className=\"Logo\" onClick={() => props.history.push(\"/\")}>\r\n            <img src=\"https://news.ycombinator.com/y18.gif\" /> <p>Hacker News</p> <small>reader</small>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default withRouter(Logo);","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst activeStyle = {\r\n    color: 'rgb(0, 102, 255)'\r\n}\r\n\r\nexport default function Nav() {\r\n    return (\r\n        <nav className='row space-between'>\r\n            <ul className='row nav'>\r\n                <li>\r\n                    <NavLink\r\n                        to='/'\r\n                        exact\r\n                        activeStyle={activeStyle}\r\n                        className='nav-link'>\r\n                        Top\r\n              </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink\r\n                        to='/new'\r\n                        activeStyle={activeStyle}\r\n                        className='nav-link'>\r\n                        New\r\n              </NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\nimport './Spinner.css'\r\n\r\nconst Spinner = () => {\r\n    return ( \r\n        <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" className=\"Spinner\">\r\n            <circle cx=\"50\" cy=\"50\" r=\"45\"/>\r\n        </svg>\r\n     );\r\n}\r\n \r\nexport default Spinner;","import React from 'react';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\nconst Loading = () => {\r\n    return ( \r\n        <div>\r\n            <Spinner />\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Loading;","const api = `https://hacker-news.firebaseio.com/v0`\r\nconst json = '.json?print=pretty'\r\n\r\nfunction removeDead(posts) {\r\n    return posts.filter(Boolean).filter(({ dead }) => dead !== true)\r\n}\r\n\r\nfunction removeDeleted(posts) {\r\n    return posts.filter(({ deleted }) => deleted !== true)\r\n}\r\n\r\nfunction onlyComments(posts) {\r\n    return posts.filter(({ type }) => type === 'comment')\r\n}\r\n\r\nfunction onlyPosts(posts) {\r\n    return posts.filter(({ type }) => type === 'story')\r\n}\r\n\r\nexport function fetchItem(id) {\r\n    return fetch(`${api}/item/${id}${json}`)\r\n        .then((res) => res.json())\r\n}\r\n\r\nexport function fetchComments(ids) {\r\n    return Promise.all(ids.map(fetchItem))\r\n        .then((comments) => removeDeleted(onlyComments(removeDead(comments))))\r\n}\r\n\r\nexport function fetchMainPosts(type) {\r\n    return fetch(`${api}/${type}stories${json}`)\r\n        .then((res) => res.json())\r\n        .then((ids) => {\r\n            if (!ids) {\r\n                throw new Error(`There was an error fetching the ${type} posts.`)\r\n            }\r\n\r\n            return ids.slice(0, 50)\r\n        })\r\n        .then((ids) => Promise.all(ids.map(fetchItem)))\r\n        .then((posts) => removeDeleted(onlyPosts(removeDead(posts))))\r\n}\r\n\r\nexport function fetchUser(id) {\r\n    return fetch(`${api}/user/${id}${json}`)\r\n        .then((res) => res.json())\r\n}\r\n\r\nexport function fetchPosts(ids) {\r\n    return Promise.all(ids.map(fetchItem))\r\n        .then((posts) => removeDeleted(onlyPosts(removeDead(posts))))\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './PostMeta.css'\r\n\r\nconst PostMeta = (props) => {\r\n\r\n    const {author, time, id, comments} = props\r\n\r\n    const formatDate = (time) => {\r\n        let date = new Date(time)\r\n        return `${date.toLocaleDateString()}, ${date.toLocaleTimeString()}`\r\n    }\r\n\r\n    return ( \r\n        <div className=\"PostMeta\">\r\n            Posted by <Link to={`/user/${author}`}>{author}</Link> {formatDate(time)}\r\n                {(comments || comments === 0) && <>• <Link to={`/post/${id}`}>{comments} comments</Link></>}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default PostMeta;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchComments, fetchItem } from '../../utils/api';\r\nimport PostMeta from '../PostMeta/PostMeta';\r\nimport './Post.css'\r\n\r\n\r\nconst Post = (props) => {\r\n    const {post} = props\r\n\r\n    const handleTitleClick = () => {\r\n        \r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     fetchComments(post.kids)\r\n    //         .then(res => {\r\n    //             console.log(res)\r\n    //         })\r\n    // }, [post])\r\n    \r\n    return ( \r\n        <div className=\"Post\">\r\n            <div className=\"title\" onClick={handleTitleClick}>\r\n                <a target=\"_blank\" href={post.url}>{post.title}</a>\r\n            </div>\r\n            <PostMeta \r\n                author={post.by}\r\n                time={post.time}\r\n                id={post.id}\r\n                comments={post.descendants} />\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Post;","import React, { useEffect, useState } from 'react';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport Post from '../../components/Post/Post';\r\nimport {fetchMainPosts} from '../../utils/api'\r\n\r\nconst PostsView = (props) => {\r\n    const {type} = props\r\n    \r\n    const [articles, setArticles] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        fetchMainPosts(type).then(res => { setLoading(false); setArticles(res) })\r\n    }, [type])\r\n\r\n    return ( \r\n        <div>\r\n            {loading ? <Loading />: articles.map(article => <Post \r\n                                                                key={article.id} \r\n                                                                post={article} />)}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default PostsView;","import React from 'react';\r\nimport PostMeta from '../PostMeta/PostMeta';\r\nimport './PostContent.css'\r\n\r\nconst PostContent = (props) => {\r\n\r\n    const {post, showComments} = props\r\n\r\n    return ( \r\n        <div className=\"PostContent\">\r\n            <PostMeta \r\n                author={post.by}\r\n                time={post.time}\r\n                id={post.id}\r\n                comments={showComments && post.descendants} />\r\n            <div dangerouslySetInnerHTML={{__html: post.text}}>\r\n\r\n            </div>\r\n        </div>  \r\n     );\r\n}\r\n \r\nexport default PostContent;","import React, { useEffect, useState } from 'react';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport PostContent from '../../components/PostContent/PostContent';\r\nimport PostMeta from '../../components/PostMeta/PostMeta';\r\nimport { fetchComments, fetchItem } from '../../utils/api';\r\nimport './PostView.css'\r\n\r\nconst PostView = (props) => {\r\n\r\n    const {match, history} = props\r\n\r\n    const [post, setPost] = useState({})\r\n    const [comments, setComments] = useState(['-1'])\r\n\r\n    useEffect(() => {\r\n        fetchItem(match.params.id)\r\n            .then(res => {\r\n                setPost(res)\r\n                \r\n                if(res.kids == undefined) {\r\n                    setComments([])\r\n                }\r\n                else {\r\n                    fetchComments(res.kids)\r\n                    .then(c => {\r\n                        setComments(c)\r\n                    })\r\n                }\r\n            })\r\n\r\n        \r\n    }, [])\r\n\r\n    console.log()\r\n\r\n    return ( \r\n        <div className=\"PostView\">\r\n            {(Object.keys(post).length !== 0 && comments[0] != -1) ? (\r\n                \r\n                <>\r\n                    <div className=\"title\" onClick={() => { window.open(post.url, \"_blank\") }}>\r\n                        <h1>{post.title}</h1>\r\n                    </div>\r\n\r\n                    <PostMeta \r\n                        author={post.by}\r\n                        time={post.time}\r\n                        id={post.id}\r\n                        comments={post.descendants} />\r\n\r\n                        <br />\r\n\r\n                    {comments.map(c => (\r\n                        <PostContent \r\n                            post={c}\r\n                            key={c.id} />\r\n                    ))}\r\n                </>\r\n            ) : (\r\n                <Loading />\r\n            )}\r\n            \r\n        </div>  \r\n     );\r\n}\r\n \r\nexport default PostView;","import React from 'react';\r\nimport './UserMeta.css'\r\n\r\nconst UserMeta = (props) => {\r\n\r\n    const {time, karma} = props\r\n    \r\n    const formatDate = (time) => {\r\n        let date = new Date(time)\r\n        return `${date.toLocaleDateString()}, ${date.toLocaleTimeString()}`\r\n    }\r\n\r\n    return (\r\n        <span className=\"UserMeta\">\r\n            joined {formatDate(time)} has {karma} karma\r\n        </span>\r\n    );\r\n}\r\n \r\nexport default UserMeta;","import React, { useEffect, useState } from 'react';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport Post from '../../components/Post/Post';\r\nimport UserMeta from '../../components/UserMeta/UserMeta';\r\nimport { fetchPosts, fetchUser } from '../../utils/api';\r\nimport './UserView.css'\r\n\r\nconst UserView = (props) => {\r\n\r\n    const {match} = props\r\n\r\n    const [user, setUser] = useState({})\r\n    const [posts, setPosts] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetchUser(match.params.login)\r\n            .then(res => {\r\n                setUser(res)    \r\n\r\n                fetchPosts(res.submitted)\r\n                    .then(s => {\r\n                        setPosts(s)\r\n                    })\r\n            })\r\n    }, [])\r\n\r\n    return ( \r\n        <div>\r\n            <div className=\"title\">\r\n                <h1>u/{match.params.login}</h1>\r\n            </div>\r\n            <UserMeta \r\n                karma={user.karma} \r\n                time={user.created} />\r\n\r\n            <h1>Posts</h1>\r\n            {posts.length == 0 ? (\r\n                <Loading />\r\n            ) : posts.map(post => (\r\n                <Post \r\n                    post={post}\r\n                    key={post.id} />\r\n            ))}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default UserView;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Logo from './components/Logo/Logo';\r\nimport Nav from './components/Nav';\r\nimport PostsView from './views/PostsView/PostsView';\r\nimport PostView from './views/PostView/PostView';\r\nimport UserView from './views/UserView/UserView';\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div className='light'>\r\n      <div className='container'>\r\n        <div>\r\n\r\n          {/* <img src=\"https://news.ycombinator.com/y18.gif\" /> <p>Hacker News</p> <small>Reader</small> */}\r\n          <Logo />\r\n        </div>\r\n        <Nav />\r\n\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path='/'\r\n            render={() => <PostsView type='top' />}\r\n          />\r\n\r\n          <Route\r\n            path='/new'\r\n            render={() => <PostsView type='new' />}\r\n          />\r\n\r\n          <Route \r\n            path='/post/:id'\r\n            render={ props => <PostView { ...props } /> } /> \r\n\r\n          <Route\r\n            path='/user/:login'\r\n            render={ props => <UserView { ...props } /> } />\r\n            \r\n          {/* <Route path='/hacker-news' render={} /> */}\r\n\r\n\r\n          {/* <Route path='/post' component={Post} /> */}\r\n          {/* <Route path='/user' component={User} /> */}\r\n          <Route render={() => <h1>404: Not Found</h1>} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(<BrowserRouter><App/></BrowserRouter>, document.getElementById('root'));\r\n"],"sourceRoot":""}